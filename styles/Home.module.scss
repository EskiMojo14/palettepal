@use "@material/animation";
@use "@material/elevation";
@use "@material/ripple";
@use "@material/theme";
@use "@material/top-app-bar";
@use "palette.module" as palette;
@use "util";

@mixin grid-card($rows, $columns, $min: true) {
  .palette-card {
    @if ($min) {
      min-height: 100% / $rows;
    } @else {
      height: 100% / $rows;
    }
    width: 100% / $columns;
  }
}

.container {
  height: 100vh;
  max-height: 100vh;
  display: flex;
  flex-direction: column;
  .app-bar {
    @include elevation.elevation(4);
    @include top-app-bar.fill-color-accessible(
      util.map-deep-get(palette.$palette, red, 500)
    );
    .app-bar-icon {
      animation: animation.standard(
          on-rainbow,
          3000ms * length(palette.$palette)
        )
        infinite;
      $color: theme.accessible-ink-color(
        util.map-deep-get(palette.$palette, red, 500)
      );
      color: $color;
      @include ripple.states($color);
    }
    animation: animation.standard(rainbow, 3000ms * length(palette.$palette))
      infinite;
  }
  .palette-grid {
    flex: 1 1;
    min-height: 0;
    height: 100vh;
    max-height: 100vh;
    display: flex;
    flex-wrap: wrap;
    @include grid-card(4, 5, false);
    @media (max-width: 900px) {
      height: auto;
      max-height: none;
      @include grid-card(5, 4);
    }
    @media (max-width: 640px) {
      @include grid-card(10, 2);
    }
    @media (max-width: 360px) {
      @include grid-card(20, 1);
    }
  }
}

@keyframes rainbow {
  @each $color, $shades in palette.$palette {
    $i: index(palette.$palette, $color $shades);
    $percent: 0% + ((($i - 1) / length(palette.$palette)) * 100);
    #{$percent} {
      @include top-app-bar.fill-color-accessible(map-get($shades, 500));
    }
  }
}

@keyframes on-rainbow {
  @each $color, $shades in palette.$palette {
    $i: index(palette.$palette, $color $shades);
    $percent: 0% + ((($i - 1) / length(palette.$palette)) * 100);
    #{$percent} {
      $color: theme.accessible-ink-color(map-get($shades, 500));
      color: $color;
    }
  }
}
